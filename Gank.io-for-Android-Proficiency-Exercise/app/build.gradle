apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def gitVersionCode() {
    def cmd = 'git rev-list HEAD --first-parent --count'
    cmd.execute().text.trim().toInteger()
}

def gitVersionTag() {
    def cmd = 'git describe --tags'
    def version = cmd.execute().text.trim()

    def pattern = "-(\\d+)-g"
    def matcher = version =~ pattern

    if (matcher) {
        version = version.substring(0, matcher.start()) + "." + matcher[0][1]
    } else {
        version = version + ".0"
    }

    return version
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "yeungkc.com.gankio_for_android_proficiency_exercise"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "API_BASE_URL", "\"${API_BASE_URL}\"")
    }
    signingConfigs {
        releaseConfig {
            Properties signingProperties = new Properties()
            def file = rootProject.file("signing.properties")
            if (file.exists()) {
                signingProperties.load(file.newDataInputStream())
            }
            storeFile rootProject.file("YeungKc.jks")
            storePassword signingProperties.get("STORE_PASSWORD") ?: System.getenv("STORE_PASSWORD") ?: System.console()
            keyAlias signingProperties.get("KEY_ALIAS")?: System.getenv("KEY_ALIAS") ?: System.console()
            keyPassword signingProperties.get("KEY_PASSWORD") ?: System.getenv("KEY_PASSWORD") ?: System.console()
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
    applicationVariants.all { variant ->
        if (variant.buildType.name.equals('release')) {
            variant.mergedFlavor.versionCode = gitVersionCode()
            variant.mergedFlavor.versionName = gitVersionTag()
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    dataBinding.enabled = true
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.android.support:design:25.0.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    kapt "com.android.databinding:compiler:$android_plugin_version"

    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile "com.squareup.retrofit2:adapter-rxjava:2.1.0"

    compile 'io.reactivex:rxandroid:1.2.1'

    compile 'com.squareup.okhttp3:okhttp:3.4.2'
    compile 'com.facebook.stetho:stetho:1.4.1'
    compile "com.facebook.stetho:stetho-okhttp3:1.4.1"

    compile 'ws.vinta:pangu:1.1.0'

    compile 'com.romandanylyk:pageindicatorview:0.0.7'

    compile 'com.facebook.fresco:fresco:0.12.0'
    compile 'com.facebook.fresco:animated-gif:0.12.0'
    compile "com.facebook.fresco:imagepipeline-okhttp3:0.12.0+"
}
kapt {
    generateStubs = true
}
repositories {
    mavenCentral()
    maven {
        url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo'
    }
    maven { url "https://jitpack.io" }
}
